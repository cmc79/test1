<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.mycorp</groupId>
	<artifactId>test1</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>test1</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.artifact.name>${project.artifactId}</project.artifact.name>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>11</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
		<jgitflow-maven-plugin.version>1.0-m5.1</jgitflow-maven-plugin.version>
		<apache.commons-lang>3.8.1</apache.commons-lang>

		<!-- JACOCO CONFIGURATION -->
		<plugin.jacoco.version>0.8.5</plugin.jacoco.version>
		<!-- JACOCO COVERAGE RULES -->
		<!-- project elements to meet for the counter limit:(BUNDLE (All elements 
			together), METHOD, SOURCEFILE,CLASS, PACKAGE - each element) -->
		<unit.testing.element>BUNDLE</unit.testing.element>
		<!-- coverage counter types: (INSTRUCTION, LINE, BRANCH, COMPLEXITY, METHOD, 
			CLASS) -->
		<unit.testing.limit.counter>LINE</unit.testing.limit.counter>
		<!-- value to be checked: (TOTALCOUNT, COVEREDCOUNT, MISSEDCOUNT, COVEREDRATIO, 
			MISSEDRATIO) -->
		<unit.testing.limit.value>COVEREDRATIO</unit.testing.limit.value>
		<!-- range (minimum or maximum) to be checked: range from 0.0 to 1.0 -->
		<unit.testing.limit.minimum>0.80</unit.testing.limit.minimum>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>4.2.8.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
			<version>2.2.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.5</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.1</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.6.7</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.25</version>
		</dependency>
		<dependency>
			<groupId>SContratacion</groupId>
			<artifactId>clienteSContratacion</artifactId>
			<version>1.19</version>
		</dependency>
		<dependency>
			<groupId>sanitas.bravo.clientes</groupId>
			<artifactId>ws_contratacion</artifactId>
			<version>1.2.28</version>
		</dependency>
		<dependency>
			<groupId>es.sanitas.seg.SimulacionPoliza</groupId>
			<artifactId>SimulacionPoliza-services-api</artifactId>
			<version>2.15</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.25</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.16</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>2.2.2.RELEASE</version>
			<scope>test</scope>
		</dependency>

	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>external.atlassian.jgitflow</groupId>
				<artifactId>jgitflow-maven-plugin</artifactId>
				<version>${jgitflow-maven-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.jcraft</groupId>
						<artifactId>jsch</artifactId>
						<version>0.1.54</version>
					</dependency>
				</dependencies>
				<configuration>
					<flowInitContext>
						<masterBranchName>master</masterBranchName>
						<developBranchName>develop</developBranchName>
						<featureBranchPrefix>feature/</featureBranchPrefix>
						<releaseBranchPrefix>release/</releaseBranchPrefix>
						<hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
					</flowInitContext>
					<noDeploy>true</noDeploy>
					<squash>true</squash>
					<scmCommentPrefix>[RELEASE]</scmCommentPrefix>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<release>${java.version}</release>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${plugin.jacoco.version}</version>
				<executions>
					<execution>
						<id>before-unit-test-execution</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>after-unit-test-execution-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-unit-test-coverage-report</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>coverage-check</id>
						<phase>test</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/dto/*</exclude>
								<exclude>**/dto/type/*</exclude>
								<exclude>**/exception/type/*</exclude>
								<exclude>**/util/*</exclude>							</excludes>
							<rules>
								<rule>
									<element>${unit.testing.element}</element>
									<limits>
										<limit>
											<counter>${unit.testing.limit.counter}</counter>
											<value>${unit.testing.limit.value}</value>
											<minimum>${unit.testing.limit.minimum}</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
